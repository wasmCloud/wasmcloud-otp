#!/usr/bin/env bash
# This script runs on macOS
# It statically compiles openssl into erlang/elixir in order to avoid
# folks needing a specific version on their systems
# basically, a mac version of this: https://github.com/bake-bake-bake/bakeware/blob/main/Dockerfile

set -euxo pipefail
WORKDIR=./LOCAL

OTP_VERSION="OTP-25.3"
SSL_VERSION="1.1.1t"
ELIXIR_VERSION="v1.14.4"

# do all work in directory we later clean up
function setup() {
  mkdir -p $WORKDIR
  pushd $WORKDIR
  trap cleanup EXIT SIGINT
}

# set CLEANUP to false if you want to leave the build directory
# in place if the script completes or exits
CLEANUP=${CLEANUP:-true}
function cleanup(){
  # always leave shell in same place we started
  popd

  [[ "$CLEANUP" == "true" ]] \
    && rm -rf $WORKDIR \
    || echo "leaving $WORKDIR in place"
}

function handle_openssl() {
  curl https://www.openssl.org/source/openssl-$SSL_VERSION.tar.gz -O \
    && tar -xzf openssl-$SSL_VERSION.tar.gz \
    && pushd openssl-$SSL_VERSION \
    && export OPENSSLDIR=$PWD \
    && ./config \
    && make depend \
    && make \
    && mkdir lib \
    && cp -r libc* lib/ \
    && cp -r libs* lib/ \
    && popd
}

# compile erlang and add it to our path
function handle_erlang() {
    git clone https://github.com/erlang/otp otp \
    && pushd otp \
    && git checkout $OTP_VERSION \
    && ./otp_build autoconf \
    && ./configure --with-ssl=$OPENSSLDIR --disable-dynamic-ssl-lib \
    && make -j4 \
    && mkdir $WDIR/install \
    && echo "in order to build our erts directory, we have to install" \
    && make DESTDIR=$WDIR/install install \
    && echo "hackily rip out the erts and put it where bakeware expects" \
    && cp -r $WDIR/install/usr/local/lib/erlang/erts-* $WDIR/otp/ \
    && export PATH=$WDIR/otp/bin:$PATH \
    && popd
}

# compile elixir and add it to our path
function handle_elixir() {
    #&& make DESTDIR=$WDIR/install install \
    git clone https://github.com/elixir-lang/elixir.git elixir \
    && pushd elixir \
    && git checkout $ELIXIR_VERSION \
    && make clean \
    && make \
    && export PATH=$PWD/bin:$PATH \
    && popd
}

WDIR=
function main(){
  setup
  WDIR=$PWD
  handle_openssl
  handle_erlang
  handle_elixir

  # this assumes our work directory is in the base of the wasmcloud repo
  cd ../wasmcloud_host
  mix archive.install github hexpm/hex branch latest --force

  # gross
  git clone https://github.com/erlang/rebar3
  cd rebar3
  git checkout 3.20.0
  ./bootstrap
  cd ..
  mkdir -p $HOME/.mix/elixir/1-14/
  cp rebar3/rebar3 $HOME/.mix/elixir/1-14/

  # wasmcloud_host
  export RUSTLER_NIF_VERSION=2.14
  make release
}
main
