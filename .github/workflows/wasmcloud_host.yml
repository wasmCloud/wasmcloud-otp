name: WasmcloudHost Elixir CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  working-directory: wasmcloud_host

jobs:
  build:
    strategy:
      matrix:
        elixir: [1.13.3]
        otp: [23.0, 23.3.4.1, 24.0]
    services:
      nats:
        image: nats:2
        ports:
          - 4222:4222

    name: Build and test
    runs-on: ubuntu-20.04
    env:
      MIX_ENV: test

    steps:
      - uses: actions/checkout@v2

      - name: Setup elixir
        uses: actions/setup-elixir@v1.5
        with:
          elixir-version: ${{ matrix.elixir }} # Define the elixir version [required]
          otp-version: ${{ matrix.otp }} # Define the OTP version [required]
          experimental-otp: true # experimental flag required for ubuntu 20.04

      - name: Retrieve Mix Dependencies Cache
        uses: actions/cache@v2
        id: mix-cache #id to use in retrieve action
        with:
          path: |
            wasmcloud_host/deps
            wasmcloud_host/_build
          key: ${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-mix-${{ hashFiles('wasmcloud_host/mix.exs', 'wasmcloud_host/mix.lock') }}

      - name: Install Mix Dependencies
        working-directory: ${{env.working-directory}}
        if: steps.mix-cache.outputs.cache-hit != 'true'
        run: |
          mix local.rebar --force
          mix local.hex --force
          mix do deps.get, deps.compile

      - name: Check Formatting
        working-directory: ${{env.working-directory}}
        run: mix format --check-formatted

      - name: Ensure static files build properly
        working-directory: ${{env.working-directory}}
        run: make esbuild

      - name: Run Credo
        working-directory: ${{env.working-directory}}
        continue-on-error: true # Don't fail entire action with refactoring opportunities for now
        run: mix credo --strict

      # - name: Run Tests
      #   working-directory: ${{env.working-directory}}
      #   run: |
      #     WASMCLOUD_LATTICE_PREFIX=$(echo "${{ runner.os }}__${{ matrix.otp }}__${{ matrix.elixir }}__${{ env.working-directory }}" | sed 's/\./_/g') \
      #     mix test

      - name: Retrieve PLT Cache
        uses: actions/cache@v2
        id: plt-cache
        with:
          path: wasmcloud_host/priv/plts
          key: ${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-plts-${{ hashFiles('wasmcloud_host/mix.exs', 'wasmcloud_host/mix.lock') }}

      - name: Create PLTs
        working-directory: ${{env.working-directory}}
        if: steps.plt-cache.outputs.cache-hit != 'true'
        run: |
          mkdir -p priv/plts
          mix dialyzer --plt

      - name: Run dialyzer
        working-directory: ${{env.working-directory}}
        continue-on-error: true # Don't fail entire action with dialyzer opportunities for now
        run: mix dialyzer --no-check
